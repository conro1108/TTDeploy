{"version":3,"sources":["Login.js","Header.js","Tweet.js","OurModal.js","Success.js","Fail.js","Body.js","Footer.js","Splash.js","Contact.js","Help.js","Page.js","App.js","serviceWorker.js","index.js","logo2.JPG","logo.JPG"],"names":["Login","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","login_state","props","isLoggedIn","react_default","a","createElement","Fragment","username","className","onClick","logout","loginUrl","href","Component","Header","handleHome","width","src","require","alt","src_Login","checkLoginStatus","componentDidMount","resourceOwnerKeyCookie","resourceOwnerSecretCookie","Tweet","_this","init_val","undefined","value","state","file","handleChange","bind","assertThisInitialized","fileHandler","event","text","target","setState","onChange","id","_this2","files","upload","console","log","postData","uploadData","formdata","FormData","field","append","axios","post","uploadUrl","then","response","onUpload","slice","name","error","charlimit","length","type","React","customStyles","content","top","left","right","bottom","marginRight","transform","padding","OurModal","Bsplitting","splitting","showModal","split","handleOpenModal","lib_default","isOpen","style","handleCloseModal","data-dismiss","aria-label","aria-hidden","checked","handleInputChange","handleCancel","handleSplitting","Success","timeline","dist","dataSource","sourceType","screenName","options","height","onLoad","handleHome2","Fail","handleHome3","handleHelp","Body","handleaddbox","handleremovebox","handleTweetChange","handleSubmit","handleFileUpload","boxes","push","index","tweetsent","get","data","url","fields","numTweets","tweets","i","STATUS","MEDIA","thread","TWEETS","xhttp","XMLHttpRequest","open","withCredentials","send","JSON","stringify","parsedResponse","parse","errorMessage","body","newBoxes","defineProperty","splice","full_text","splitAt","x","search_index","text_collection","split_text","j","tweetId","mediaId","_this3","button","Tweets","map","box","src_Tweet","key","sendtweet","src_Success","src_Fail","src_OurModal","Footer","handleContact","Splash","Contact","Help","cookies","Cookies","Page","help","contact","remove","path","domain","window","location","reload","temp","assign","Status","cookie_1","cookie_2","keyCookie","secretCookie","set","expires","Date","header","src_Header","footer","src_Footer","src_Help","src_Contact","src_Body","src_Splash","App","BrowserRouter","src_Page","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.8a04e465.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Login extends Component {\r\n    constructor () {\r\n        super()\r\n              \r\n    }\r\n\r\n\r\n    render() {\r\n        const isLoggedIn = this.props.isLoggedIn;\r\n        let login_state;\r\n        //console.log(\"usr: \"+ this.props.username + \",  Scookie: \" + this.props.resourceOwnerSecretCookie + \", Kcookie: \" + this.props.resourceOwnerKeyCookie + \", Url: \" + this.props.loginUrl + \", isLoggedIn: \" + this.props.isLoggedIn);\r\n        if (!isLoggedIn) {\r\n            if (!this.props.loginUrl) {//!this.props.loginUrl\r\n                login_state = \"Loading...\";\r\n            } else {\r\n                login_state = <a className=\"button\" href={this.props.loginUrl}>Login with Twitter</a>;\r\n            }\r\n            \r\n        } else {\r\n            login_state = <> <span> Hello {this.props.username} </span> <a className=\"button\" onClick={this.props.logout}>Logout</a> </>\r\n\r\n        }\r\n\r\n        return (\r\n            <div className=\"login_component\">\r\n                {login_state}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport Login from './Login';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\n\r\nclass Header extends Component {\r\n    constructor(props){\r\n    super(props);}\r\n    render() {\r\n        //console.log(this.props.username + \", \" + this.props.resourceOwnerSecretCookie + \", \" + this.props.resourceOwnerKeyCookie + \", \" + this.props.loginUrl + \", \" + this.props.isLoggedIn);\r\n        return (\r\n            <div className = \"main-header\">\r\n            <div className = \"sub-header1\">\r\n                <div className = \"h-1\" onClick = {this.props.handleHome}>\r\n                    <div>\r\n                        Tweet \r\n                    </div>\r\n                    <div>\r\n                        Together\r\n                    </div>\r\n                </div>\r\n            <div className = \"h-2\" onClick = {this.props.handleHome}>\r\n                <img width = \"70px\"\r\n                src={require('./logo.JPG')}\r\n                alt='logo' />            \r\n            </div>\r\n                <div className = \"h-3\" onClick = {this.props.handleHome}>Threaded Tweeter</div>\r\n            </div>\r\n            <div className = \"sub-header2\">\r\n                <div className = \"h-4\">    \r\n                    \r\n                        <Login checkLoginStatus = {this.props.checkLoginStatus} componentDidMount = {this.props.componentDidMount} logout = {this.props.logout} loginUrl = {this.props.loginUrl} resourceOwnerKeyCookie = {this.props.resourceOwnerKeyCookie} resourceOwnerSecretCookie = {this.props.resourceOwnerSecretCookie} username = {this.props.username} isLoggedIn = {this.props.isLoggedIn}/>\r\n                    \r\n                </div>\r\n            </div>       \r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nclass Tweet extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        let init_val = ''\r\n\r\n        if (this.props.value === undefined) {\r\n            init_val = '';\r\n        }\r\n        else{\r\n            init_val = this.props.value;\r\n        }\r\n        this.state = {\r\n            value:init_val,\r\n            file:''\r\n        };\r\n        this.handleChange =        this.handleChange.bind(this);\r\n        this.fileHandler =        this.fileHandler.bind(this);\r\n    } \r\n    handleChange(event){\r\n        const text = event.target.value;\r\n        this.setState({value: text});\r\n        this.props.onChange(\"tweet\"+this.props.id, text);\r\n    }\r\n    fileHandler(event)  {\r\n        this.setState({file: event.target.files[0]});\r\n        const upload = event.target.files[0];\r\n        console.log(upload); \r\n        let postData = this.props.uploadData;\r\n        //postData = Object.assign({'file': event.target.files[0]}, postData);\r\n        console.log(postData);\r\n        let formdata = new FormData();\r\n        for(const field in postData){\r\n            formdata.append(field, postData[field])\r\n        }\r\n        formdata.append(\"file\", event.target.files[0]); \r\n        /*\r\n        for (var pair of formdata.entries()) {\r\n            console.log(pair[0]+ ', ' + pair[1]); \r\n        }\r\n        */\r\n        //this.props.onUpload(\"media\"+this.props.id, upload);\r\n        /*\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open(\"POST\", this.props.uploadUrl);\r\n        xhr.send(formdata);\r\n        */\r\n        //const header = {'Content-Type': 'multipart/form-data'};\r\n        \r\n        axios.post(this.props.uploadUrl, formdata).then(\r\n            response => {\r\n                console.log(response);\r\n                \r\n                this.props.onUpload(\"media\"+this.props.id, this.props.uploadUrl+postData['key'].slice(0,-11)+upload.name);\r\n            }, \r\n            error => {\r\n                console.log(error);\r\n            }\r\n        )\r\n        \r\n    }\r\n\r\n    render(){\r\n        let charlimit;\r\n        console.log(this.state.value)\r\n        if(this.state.value.length <= 280){\r\n            charlimit = <div className=\"b-5\">\r\n                        {this.state.value.length}/280 \r\n                        </div>\r\n        }\r\n        else {\r\n            charlimit = <div className=\"b-5-red\">\r\n                        {this.state.value.length}/280 \r\n                        </div>\r\n        }\r\n        \r\n        return(\r\n        <div>\r\n        <textarea type=\"text2\" id=\"tweet\" name=\"tweet\" onChange={this.handleChange} value={this.state.value}/>\r\n        <div className = \"sub-body2\">\r\n        \r\n        <div className=\"b-4\"><input type=\"file\" onChange={this.fileHandler}/></div>\r\n            {charlimit}\r\n        </div> \r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Tweet;\r\n","import React from 'react';\r\nimport ReactModal from 'react-modal';\r\n\r\n\r\nconst customStyles = {\r\n    content : {\r\n        top                   : '30%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        padding               : '0px'      \r\n    }\r\n};\r\n\r\nclass OurModal extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {                                               Bsplitting: props.Bsplitting,\r\n                      splitting: props.splitting,\r\n                      showModal: props.showModal};   \r\n    }\r\n\r\n    \r\n    \r\n\r\n    render() {\r\n                let split;\r\n        const splitstate = this.props.splitting;\r\n        if(splitstate === \"off\"){ split =\r\n            <div className=\"b-1\">\r\n                Auto splitting: off\r\n                    </div>;\r\n                    console.log(\"splitting displays off\");\r\n        }\r\n        else{ split =\r\n            <div className=\"b-1\">\r\n                Auto splitting: on\r\n                    </div>;\r\n             console.log(\"splitting displays on\");\r\n            }\r\n        return (\r\n            <div className = \"sub-body1\">\r\n            {split}\r\n            <div className=\"b-2\">\r\n            <button type=\"button\" className=\"notbutton\" onClick={this.props.handleOpenModal}>Splitting options</button>\r\n            <ReactModal \r\n            isOpen={this.props.showModal} style={customStyles}>\r\n            <div className=\"modal-header\">\r\n            <div className=\"modal-title\" id=\"exampleModalLabel\">\r\n            Tweet splitting allows us to formate your thread for you.\r\n            </div>\r\n            <button  onClick={this.props.handleCloseModal} type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n            <div>\r\n            Basic splitting: \r\n            <input\r\n            name=\"Bsplitting\"\r\n            type=\"checkbox\"\r\n            checked={this.props.Bsplitting}\r\n            onChange={this.props.handleInputChange} />\r\n            </div>\r\n            </div>\r\n\r\n            <div className=\"modal-footer\">\r\n            <div className=\"b-7\" data-dismiss=\"modal\"><button type=\"submit2\"onClick={this.props.handleCancel}>cancel</button></div>\r\n            <div className=\"b-6\">\r\n            <button type=\"submit2\" onClick={this.props.handleSplitting}> submit </button>\r\n            </div>\r\n            </div>\r\n            </ReactModal>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default OurModal;","import React from 'react';   \r\nimport { Timeline } from 'react-twitter-widgets';\r\n\r\nclass Success extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n   \r\n    render() {\r\n        const username = this.props.username;\r\n        const timeline =   <Timeline\r\n            dataSource={{\r\n              sourceType: 'profile',\r\n              screenName: username\r\n            }}\r\n            options={{\r\n              username: username,\r\n              height: '300',\r\n              width: '600'\r\n            }}\r\n            onLoad={() => console.log('Timeline is loaded!')}\r\n          />;\r\n            \r\n        return (\r\n            <div className = \"after-tweet\">\r\n            <div className = \"after-tweet-header\">\r\n            <div className = \"success-1\">\r\n            Success!\r\n            </div>\r\n            <div className = \"success-2\">\r\n            Your thread of tweets was posted successfully.\r\n            </div>\r\n            </div>\r\n            <div className = \"after-tweet-body\">\r\n            {timeline}\r\n            </div>\r\n            <div className = \"after-tweet-footer\">\r\n            <button type=\"link\" onClick = {this.props.handleHome2}> post another </button> \r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Success;","import React from 'react';\r\nimport { Timeline } from 'react-twitter-widgets';\r\n\r\n\r\n\r\nclass Fail extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n       \r\n    }\r\n    \r\n   \r\n    render() {\r\n        const username = this.props.username;\r\n        const timeline =   <Timeline\r\n            dataSource={{\r\n              sourceType: 'profile',\r\n              screenName: username\r\n            }}\r\n            options={{\r\n              username: username,\r\n              height: '300',\r\n              width: '600'\r\n            }}\r\n            onLoad={() => console.log('Timeline is loaded!')}\r\n          />;\r\n        \r\n        return (\r\n            <div className = \"after-tweet\">\r\n            <div className = \"after-tweet-header\">\r\n            <div className = \"fail-1\">\r\n            Uh-oh!\r\n            </div>\r\n            <div className = \"fail-2\">\r\n            Your thread failed to post, we tried to delete the incomplete thread, but one or more tweets may still be on your feed. Please check your feed for unfinished threads.\r\n            </div>\r\n            </div>\r\n            <div className = \"after-tweet-body\">\r\n            {this.props.response}\r\n            {timeline}\r\n            </div>\r\n            <div className = \"after-tweet-footer\">\r\n            <button type=\"link\" onClick = {this.props.handleHome3}> try again </button> \r\n            </div>\r\n            <button type=\"button\" className=\"notbutton\" onClick = {this.props.handleHelp}>what happened?</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Fail;","import React from 'react';\r\nimport Tweet from './Tweet';\r\nimport OurModal from './OurModal';\r\nimport axios from \"axios\";\r\nimport Success from './Success';\r\nimport Fail from './Fail';\r\n\r\nclass Body extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.handleaddbox = this.handleaddbox.bind(this);\r\n        this.handleremovebox = this.handleremovebox.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleTweetChange = this.handleTweetChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleHome2 = this.handleHome2.bind(this);\r\n        this.handleHome3 = this.handleHome3.bind(this);\r\n        this.handleCancel =       this.handleCancel.bind(this);\r\n        this.handleSplitting =       this.handleSplitting.bind(this);\r\n        this.handleOpenModal = this.handleOpenModal.bind(this);\r\n        this.handleCloseModal = this.handleCloseModal.bind(this);\r\n        this.handleFileUpload = this.handleFileUpload.bind(this);\r\n        const boxnum = {index: 0};\r\n        const boxes = [];\r\n        boxes.push(boxnum);\r\n        this.state = {boxes,\r\n                      Bsplitting: false,\r\n                      splitting: \"off\",\r\n                      tweetsent: \"no\",\r\n                      showModal: false,\r\n                      response: \"\",\r\n                      uploadUrl: \"\",\r\n                      uploadData:{}};        \r\n    }\r\n    \r\n    componentDidMount() {\r\n        axios.get(\"https://api.threadedtweeter.com/v2/upload\").then(\r\n            response => {\r\n                this.setState({\r\n                    uploadUrl: response.data.url,\r\n                    uploadData: response.data.fields\r\n                });\r\n            }\r\n        )\r\n    }\r\n\r\n    handleSubmit(){\r\n        let numTweets = this.state.boxes.length;\r\n        let tweets = [];\r\n        for(let i = 0; i < numTweets; i++) {\r\n            tweets.push({\r\n                \"STATUS\": (\"tweet\"+i in this.state) ? this.state[\"tweet\"+i] : \"\",\r\n                \"MEDIA\": (\"media\"+i in this.state) ? [this.state[\"media\"+i]] : []\r\n            })\r\n        }\r\n        let thread = {\"TWEETS\" : tweets};\r\n        //console.log(JSON.stringify(thread));\r\n        let xhttp = new XMLHttpRequest(); \r\n        xhttp.open(\"POST\", \"https://api.threadedtweeter.com/v2/post-thread\", false); \r\n        xhttp.withCredentials=true;\r\n        xhttp.send(JSON.stringify(thread));\r\n        let response = xhttp.response;\r\n        const parsedResponse = JSON.parse(response);\r\n        //console.log(parsedResponse);\r\n        if (!(parsedResponse.errorMessage === undefined)){\r\n            this.setState({tweetsent: \"fail\", response: parsedResponse.errorMessage});\r\n        }\r\n        else{\r\n            this.setState({tweetsent: \"success\", response: parsedResponse.body});\r\n        }\r\n    }\r\n    \r\n    handleHome2(){\r\n        this.setState({tweetsent: \"no\", response: \"\"});\r\n        //TODO reinitalize boxes to whatever one blank box is\r\n    }\r\n    \r\n    handleHome3(){\r\n        this.setState({tweetsent: \"no\", response: \"\"});\r\n        //DO NOT reinitalize boxes\r\n    }\r\n\r\n    handleaddbox(){\r\n        const newBoxes = this.state.boxes;\r\n        newBoxes.push({index: newBoxes.length});\r\n        this.setState({boxes : newBoxes});\r\n        \r\n        //console.log(\"handleaddbox \" + this.state.boxes.length);\r\n    }\r\n    \r\n    handleOpenModal () {\r\n        this.setState({ showModal: true });\r\n        //console.log(\"Open Modal\");\r\n    }\r\n\r\n    handleCloseModal () {\r\n        this.setState({ showModal: false });\r\n        //console.log(\"Close Modal\");\r\n    }\r\n    \r\n    handleremovebox(){\r\n        const newBoxes = this.state.boxes;\r\n        this.setState({['tweet'+(this.state.boxes.length - 1)] : ''});\r\n        newBoxes.splice((newBoxes.length-1),1);\r\n        this.setState({boxes : newBoxes});\r\n        //console.log(\"handleremovebox \" + this.state.boxes.length);\r\n    }\r\n    \r\n    handleSplitting () {\r\n        //console.log(\"Splitting\");\r\n\r\n        let full_text = \"\";\r\n\r\n        //console.log(\"enter loop\");\r\n\r\n        for (let i = 0; i < this.state.boxes.length; i++)\r\n        {\r\n            full_text += this.state['tweet'+i] + \" \";\r\n        }\r\n\r\n\r\n        while(this.state.boxes.length > 0)\r\n        {\r\n            //console.log(\"adding text\");\r\n            \r\n\r\n            this.handleremovebox();\r\n        }\r\n\r\n        //console.log(\"done removing boxes\");\r\n        //console.log(this.state.boxes.length);\r\n\r\n        const newBoxes = this.state.boxes;\r\n        newBoxes.push({index: newBoxes.length});\r\n        this.setState({boxes : newBoxes});\r\n\r\n        //console.log(this.state.boxes.length);\r\n\r\n        const splitAt = index => x => [x.slice(0, index), x.slice(index + 1)];\r\n\r\n        if (full_text.length === 0)\r\n            this.setState({['tweet0']: ''});\r\n\r\n        else\r\n        {\r\n            if (full_text.length > 280)\r\n            {\r\n                let search_index = 279;\r\n                let text_collection = [];\r\n                while (full_text[search_index] != ' ')\r\n                    search_index--;\r\n                \r\n                let split_text = splitAt(search_index)(full_text);\r\n                this.setState({['tweet0']: split_text[0]});\r\n\r\n                while(split_text[1].length > 280)\r\n                {\r\n                    search_index = 279;\r\n                    while (split_text[1][search_index] != ' ')\r\n                        search_index--;\r\n                    split_text = splitAt(search_index)(split_text[1]);\r\n                    text_collection.push(split_text[0]);\r\n                }\r\n\r\n                text_collection.push(split_text[1]);\r\n\r\n                for (let j = 0; j < text_collection.length; j++)\r\n                {\r\n                    this.handleaddbox();\r\n                    this.setState({['tweet'+(j+1)]: text_collection[j]});\r\n                }\r\n                \r\n\r\n            }\r\n\r\n            else\r\n                this.setState({['tweet0']: full_text});\r\n        }\r\n\r\n\r\n        this.setState({ showModal: false });\r\n        //this.setState({ re_render: true });\r\n\r\n    }\r\n\r\n    handleCancel () {\r\n        this.setState({ Bsplitting: false, splitting:\"off\" });   \r\n        //console.log(\"cancel: set splitting state \" + this.state.splitting);\r\n        //console.log(\"cancel: set Bsplitting state \" + this.state.Bsplitting);\r\n        this.setState({ showModal: false });\r\n    }\r\n\r\n    handleInputChange(event){\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n          [name]: value\r\n        });\r\n        \r\n        if(this.state.Bsplitting === true){\r\n            this.setState({splitting: \"off\"});\r\n            //console.log(\"set splitting state off\");\r\n        }\r\n        else{\r\n            this.setState({splitting: \"on\"});\r\n            //console.log(\"set splitting state on\");\r\n        }\r\n    }\r\n\r\n    handleTweetChange(tweetId, value) {\r\n        this.setState({[tweetId]: value});\r\n            \r\n    }\r\n\r\n    handleFileUpload(mediaId, value) {\r\n        this.setState({[mediaId]: value})\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.tweetsent);\r\n        const Tweets = this.state.boxes.map(box => (\r\n            <Tweet \r\n                key={box.index}\r\n                id={box.index}\r\n                onChange={this.handleTweetChange}\r\n                value={this.state['tweet'+box.index]}\r\n                uploadUrl={this.state.uploadUrl}\r\n                uploadData={this.state.uploadData}\r\n                onUpload={this.handleFileUpload}    \r\n            />\r\n        ));\r\n\r\n        const boxes = this.state.boxes;\r\n        const boxnum = boxes.length;\r\n        let button;\r\n        let content;\r\n        if(boxnum === 1){\r\n            button = <div className = \"centeronebutton\">\r\n                <button className = \"circlebutton\" onClick = {this.handleaddbox}>\r\n                    +\r\n                    </button>\r\n            </div>\r\n        } else{\r\n            button = <div className = \"centeronebutton\">\r\n                <button className = \"circlebutton\" onClick = {this.handleremovebox}>\r\n                    -\r\n                    </button>\r\n            <button className = \"circlebutton\" onClick = {this.handleaddbox}>\r\n                +\r\n                </button>\r\n            </div>\r\n        }\r\n\r\n        const sendtweet = <div className=\"b-3\"><button type=\"submit2\" onClick = {this.handleSubmit}>submit</button></div>;\r\n\r\n        \r\n         if(this.state.tweetsent === \"success\"){\r\n                        content = <Success handleHome2= {this.handleHome2} response = {this.state.response} username = {this.props.username}/>\r\n                }\r\n                else if(this.state.tweetsent === \"fail\"){\r\n                        content =  <Fail handleHome3= {this.handleHome3} handleHelp = {this.props.handleHelp} response = {this.state.response} username = {this.props.username}/>\r\n\r\n                }\r\n\r\n                else if(this.state.showModal){\r\n                    content = \r\n                                <div className = \"sub-body\">\r\n        \r\n                                <OurModal showModal={this.state.showModal}  Bsplitting={this.state.Bsplitting}  splitting={this.state.splitting}  handleInputChange = {this.handleInputChange} handleCancel = {this.handleCancel} handleOpenModal = {this.handleOpenModal} handleSplitting = {this.handleSplitting} handleCloseModal = {this.handleCloseModal}/>\r\n                                \r\n                                {button}\r\n                                {sendtweet}\r\n        \r\n                                </div>\r\n                    \r\n                }\r\n\r\n                else{\r\n                        content = \r\n                                    <div className = \"sub-body\">\r\n\r\n                                    <OurModal showModal={this.state.showModal}  Bsplitting={this.state.Bsplitting}  splitting={this.state.splitting}  handleInputChange = {this.handleInputChange} handleCancel = {this.handleCancel} handleOpenModal = {this.handleOpenModal} handleSplitting = {this.handleSplitting} handleCloseModal = {this.handleCloseModal}/>\r\n                                    \r\n                                    {Tweets}             \r\n                                    {button}\r\n                                    {sendtweet}\r\n\r\n                                    </div>\r\n                }\r\n        \r\n        \r\n        return (\r\n                <div className = \"main-body\">\r\n                {content}\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\n/*const Tweets = ({boxes}) => (\r\n    <div>\r\n    {boxes.map( box =>(\r\n    <Tweet \r\n        key={box}\r\n        id={box}\r\n        onChange\r\n    />))}\r\n    </div>\r\n)*/\r\n\r\nexport default Body;","import React, { Component } from 'react';\r\n\r\n\r\nclass Footer extends Component {\r\n    constructor(props){\r\n        super(props);}\r\n    render() {\r\n        return (\r\n\r\n            <div className = \"main-footer\">\r\n            <div className = \"h-1\">\r\n            <button type=\"link\" onClick = {this.props.handleHelp}> help </button>\r\n            </div>\r\n            <div className = \"h-2\" onClick = {this.props.handleHome}>\r\n                <img width = \"55px\"\r\n                src={require('./logo2.JPG')}\r\n                alt='logo2' />\r\n            </div>\r\n            <div className = \"h-5\">  \r\n            <button type=\"link\" onClick = {this.props.handleContact}> contact us </button>\r\n            </div>\r\n            </div> \r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport Login from './Login';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\n\r\nclass Splash extends Component {\r\n    constructor(props){\r\n    super(props);}\r\n    render() {\r\n                //console.log(this.props.username + \", \" + this.props.resourceOwnerSecretCookie + \", \" + this.props.resourceOwnerKeyCookie + \", \" + this.props.loginUrl + \", \" + this.props.isLoggedIn);\r\n        return (\r\n            <div className = \"splash-footer\">\r\n                <div className = \"splash-header\">\r\n\r\n                    <div className = \"splash-1\">Threaded Tweeter</div>\r\n                    </div>\r\n                    <div className = \"splash-body\">\r\n                    <div className = \"splash-2\">    \r\n                        <button type=\"link\" onClick = {this.props.handleContact}> contact us </button>\r\n                    </div>\r\n                    <div className = \"splash-3\">    \r\n                    <Login checkLoginStatus = {this.props.checkLoginStatus} componentDidMount = {this.props.componentDidMount} logout = {this.props.logout} loginUrl = {this.props.loginUrl} resourceOwnerKeyCookie = {this.props.resourceOwnerKeyCookie} resourceOwnerSecretCookie = {this.props.resourceOwnerSecretCookie} username = {this.props.username} isLoggedIn = {this.props.isLoggedIn}/>\r\n                    </div>\r\n                    <div className = \"splash-4\" >    \r\n                        <button type=\"link\" onClick = {this.props.handleHelp}> help </button>\r\n                    </div>\r\n\r\n                </div>\r\n            <div className = \"splash-subfooter\">\r\n            <div className = \"splash-5\">\r\n            An innovative tool for quick and easy threaded tweets\r\n            </div>\r\n            <img width = \"100px\"\r\n            src={require('./logo2.JPG')}\r\n            alt='logo2' />\r\n                <div className = \"splash-5\">\r\n            Lots and lots of other important words could go here, lots and lots and lots and lots and lots and lots and lots and lots and lots and lots and lots and lots and lots and lots and lots and lots and lots and lots and lots and lots and lots and lots and lots and lots and lots and lots\r\n            </div> \r\n</div>\r\n</div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Splash;","import React, { Component } from 'react';\r\n\r\n\r\nclass Contact extends Component {\r\n    render() {\r\n        return (\r\n            <div className = \"help\">\r\n            <div className = \"help-header\">\r\n            Contact us\r\n            </div>\r\n            <div className = \"help-body\">\r\n\r\n            We are creating a tool called \"Threaded Tweeter\" which will serve as a tool for computer power users to quickly and easily compose and post threaded tweets. The core product will be a command line tool that allows a user to compose a tweet thread in their preferred text editor, and post to twitter from the comfort of their terminal emulator.\r\n            <div className = \"help-subheader\">\r\n            https://github.com/conro1108/TTDeploy\r\n            </div>\r\n            <div className = \"help-subheader\">\r\n\r\n            </div>\r\n            </div>\r\n            \r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\n\r\n\r\nclass Help extends Component {\r\n    render() {\r\n        return (\r\n            <div className = \"help\">\r\n                <div className = \"help-header\">\r\n            Help\r\n            </div>\r\n                <div className = \"help-body\">\r\n            <div className = \"help-subheader\">\r\n                General information:\r\n            </div>\r\nThreaded Tweeter is a web application that can help you make threaded tweets on twitter. You have full control of what content goes in each tweet, including pictures, but we can format you tweets for you as well.\r\n\r\n            <div className = \"help-subheader\">\r\nHow to create a thread:\r\n            </div>\r\nUsers must first login with twitter and authorize our app to post tweets on their page. Threaded tweeter will only post threads you create, and delete unfinished threads if there was a fatal error.\r\nType or paste your tweet into the textbox. Use the “+” button to add a new tweet to your thread. Tweets appear on the page in order, first to last. Click the “-” button to remove a tweet from your thread. \r\nYou can attach a picture to any tweet by clicking the “Add picture” button or dragging a picture onto the tweet from your desktop.\r\nTweets are constrained by Twitter’s 280 character count. Threaded Tweeter shows an indicator of your current character count for each tweet at the bottom right of the textbox.\r\nOur app can automatically split and format your tweets for you. Click “splitting options” above the text box to access these. \r\nClick “send” to publish your tweet.\r\nAfter publishing a tweet, you should see a “Success” message and a window showing your thread.\r\n\r\n            <div className = \"help-subheader\">\r\nTweet splitting options:\r\n            </div>\r\nSplitting can be done at the end of the next word, after punctuation such as periods, commas and semicolons, or at punctuation and emoji. We can also number the tweets in your thread for you. You can put custom text at the start and or end of each tweet. This text will not appear at the start of your first tweet or the end of your last tweet. You can use this option to put in ellipses, for example. \r\n\r\n            <div className = \"help-subheader\">\r\nErrors:\r\n            </div>\r\nIf you received an error notice it may have been caused by some of these common errors:\r\nAttempting to post a tweet while not logged in.\r\nAttempting to post a tweet over the character limit.\r\nAuthentication or authorization failures.\r\nConnection/Internet failures.\r\nIf a failure occurs after some of the thread has already been posted, Threaded Tweeter will attempt to delete them for you. Certain errors, such as a dropped connection, may make it impossible to delete the unfinished thread. Threaded Tweeter will show you your timeline after a failure occurs, so you can check for partial threads and delete them manually.\r\n<div className = \"help-subheader\">\r\n            </div>\r\n            </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Help;","import React, { Component } from 'react';\r\nimport Header from './Header';\r\nimport Body from './Body';\r\nimport Footer from './Footer';\r\nimport Splash from './Splash';\r\nimport Contact from './Contact';\r\nimport Help from './Help';\r\nimport axios from 'axios';\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst cookies = new Cookies();\r\n\r\nclass Page extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {isLoggedIn: false,\r\n                     help: false,\r\n                     contact: false,\r\n                     loginUrl: '',\r\n                     resourceOwnerKeyCookie: '',\r\n                     resourceOwnerSecretCookie: '',\r\n                     username: null}; \r\n    \r\n    this.handleHelp = this.handleHelp.bind(this);\r\n    this.handleContact = this.handleContact.bind(this);\r\n    this.handleHome = this.handleHome.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n    this.checkLoginStatus = this.checkLoginStatus.bind(this);\r\n    this.componentDidMount = this.componentDidMount.bind(this);\r\n    }\r\n    handleHelp(){\r\n        this.setState({help: true, contact: false});\r\n        //console.log(\"help\");\r\n    }\r\n    handleContact(){\r\n        this.setState({help: false, contact: true});\r\n        //console.log(\"contact us\");\r\n    }\r\n    handleHome(){\r\n        this.setState({help: false, contact: false});\r\n    }\r\n    \r\n    logout() {\r\n        //console.log('logging out')\r\n        cookies.remove('access_token_key',  { path: '/', domain : '.threadedtweeter.com' });\r\n        cookies.remove('access_token_secret',  { path: '/', domain : '.threadedtweeter.com' }); \r\n        window.location.reload();\r\n    }\r\n    \r\n    checkLoginStatus() {\r\n        let temp = Object.assign({}, this.state);\r\n\r\n        return axios.get(\"https://api.threadedtweeter.com/v2/login/status\", {withCredentials: true}).then(\r\n            response => {\r\n                temp.isLoggedIn = response.data.Status;\r\n                temp.username = response.data.username;\r\n                this.setState(temp);\r\n            },\r\n            error => {\r\n                temp.isLoggedIn = false;\r\n                this.setState(temp);\r\n            }\r\n        );\r\n    }\r\n     \r\n    componentDidMount() {\r\n        this.checkLoginStatus().then(\r\n            response => {\r\n                if (!this.state.isLoggedIn) {\r\n                    //console.log('not logged in part 2')\r\n                    axios.get('https://api.threadedtweeter.com/v2/login?mode=webapp').then(\r\n                        response => {\r\n                            this.setState({\r\n                                loginUrl : response.data.url,\r\n                                resourceOwnerKeyCookie : response.data.cookie_1,\r\n                                resourceOwnerSecretCookie : response.data.cookie_2,\r\n                                isLoggedIn : false,\r\n                                username : null\r\n                            })\r\n                            \r\n                            let keyCookie = this.state.resourceOwnerKeyCookie.split(\";\")[0].split(\"=\")[1];\r\n                            let secretCookie = this.state.resourceOwnerSecretCookie.split(\";\")[0].split(\"=\")[1];\r\n            \r\n                            cookies.set('resource_owner_key', keyCookie, {path : '/', expires : new Date('2020-1-1'), domain : '.threadedtweeter.com'});\r\n                            cookies.set('resource_owner_secret', secretCookie, {path : '/', expires : new Date('2020-1-1'), domain : '.threadedtweeter.com'});\r\n                        } \r\n                    ); \r\n                }\r\n            }\r\n        )\r\n\r\n    }\r\n    \r\n    render() {\r\n        \r\n        //console.log(this.state.username + \", \" + this.state.resourceOwnerSecretCookie + \", \" + this.state.resourceOwnerKeyCookie + \", \" + this.state.loginUrl + \", \" + this.state.isLoggedIn);\r\n        \r\n        let content;\r\n        \r\n        const header = <Header handleHome= {this.handleHome} checkLoginStatus = {this.checkLoginStatus} componentDidMount = {this.componentDidMount} logout = {this.logout} loginUrl = {this.state.loginUrl} resourceOwnerKeyCookie = {this.state.resourceOwnerKeyCookie} resourceOwnerSecretCookie = {this.state.resourceOwnerSecretCookie} username = {this.state.username} isLoggedIn = {this.state.isLoggedIn}/>;\r\n        \r\n        const footer = <Footer handleHelp = {this.handleHelp} handleContact = {this.handleContact} handleHome= {this.handleHome}/>;\r\n        \r\n            if(this.state.help === true){//help page\r\n                content = <div className = \"bodystyle\">\r\n            {header}\r\n            <Help />\r\n            {footer}\r\n                </div>\r\n            }\r\n            else if(this.state.contact === true){// contact page\r\n                content = <div className = \"bodystyle\">\r\n            {header}\r\n            <Contact />\r\n            {footer}\r\n                </div>\r\n            }\r\n            else if(this.state.isLoggedIn === true){//normal tweet page\r\n                content = \r\n                    <div className = \"bodystyle\">\r\n                    {header}\r\n                    <Body handleHelp= {this.handleHelp} username = {this.state.username}/>\r\n                    {footer}\r\n                    </div>\r\n            }\r\n        else{//splash\r\n            content = <Splash handleHelp = {this.handleHelp} handleContact = {this.handleContact} checkLoginStatus = {this.checkLoginStatus} componentDidMount = {this.componentDidMount} logout = {this.logout} loginUrl = {this.state.loginUrl} resourceOwnerKeyCookie = {this.state.resourceOwnerKeyCookie} resourceOwnerSecretCookie = {this.state.resourceOwnerSecretCookie} username = {this.state.username} isLoggedIn = {this.state.isLoggedIn}/>;\r\n        }\r\n        \r\n        return (\r\n            <div>\r\n            {content}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Page;","import React, { Component } from 'react';\r\nimport Page from './Page'\r\nimport './App.css';\r\nimport { BrowserRouter} from \"react-router-dom\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <Page />\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo2.6ed5019e.JPG\";","module.exports = __webpack_public_path__ + \"static/media/logo.56a41b55.JPG\";"],"sourceRoot":""}