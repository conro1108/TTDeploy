{"version":3,"sources":["LoginButton.js","LoggedInDisplay.js","Header.js","OurModal.js","Body.js","Footer.js","Page.js","App.js","serviceWorker.js","index.js"],"names":["cookies","Cookies","LoginButton","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","loginUrl","resourceOwnerKeyCookie","resourceOwnerSecretCookie","isLoggedIn","_this2","axios","get","then","response","setState","data","url","keyCookie","secretCookie","set","path","expires","Date","react_default","a","createElement","className","href","Component","LoggedInDisplay","queryString","props","location","search","logo1","src","alt","style","Header","width","Switch","Route","component","ReactModal","setAppElement","OurModal","showModal","handleOpenModal","bind","assertThisInitialized","handleCloseModal","type","onClick","lib_default","isOpen","class","id","data-dismiss","aria-label","aria-hidden","value","React","autosplitting","sendtweet","splittingoptions","src_OurModal","Tweets","_ref","boxes","map","box","key","index","name","charactersused","Body","handleaddbox","handleremovebox","push","boxnum","newBoxes","length","console","log","splice","button","Body_Tweets","contactbutton","action","helpbutton","logo2","Footer","Page","src_Header","src_Body","src_Footer","App","BrowserRouter","src_Page","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a46214b3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst cookies = new Cookies();\r\n\r\nclass LoginButton extends Component {\r\n    constructor () {\r\n        super()\r\n        this.state = {\r\n            loginUrl: '',\r\n            resourceOwnerKeyCookie: '',\r\n            resourceOwnerSecretCookie: '',\r\n            isLoggedIn: false\r\n        }\r\n              \r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('https://api.threadedtweeter.com/login?mode=webapp').then(\r\n            response => {\r\n                this.setState({\r\n                    loginUrl : response.data.url,\r\n                    resourceOwnerKeyCookie : cookies.get('resource_owner_key'),\r\n                    resourceOwnerSecretCookie : cookies.get('resource_owner_secret'),\r\n                    isLoggedIn : false\r\n                })\r\n\r\n                let keyCookie = this.state.resourceOwnerKeyCookie;\r\n                let secretCookie = this.state.resourceOwnerSecretCookie;\r\n\r\n                cookies.set('resource_owner_key', keyCookie, {path : '/', expires : new Date('2020-1-1')});\r\n                cookies.set('resource_owner_secret', secretCookie, {path : '/', expires : new Date('2020-1-1')});\r\n            } \r\n        ); \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login_button\">\r\n                <a className=\"button\" href={this.state.loginUrl}>Login with Twitter</a>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginButton;","import React, { Component } from 'react';\r\n\r\nclass LoggedInDisplay extends Component {\r\n    constructor () {\r\n        super()\r\n        this.state = {\r\n            queryString : \"\"\r\n        }        \r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState(\r\n            {queryString : this.props.location.search}\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"loged_in_display\">\r\n                {this.state.queryString}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoggedInDisplay;","import React, { Component } from 'react';\r\nimport LoginButton from './LoginButton';\r\nimport LoggedInDisplay from './LoggedInDisplay';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nconst logo1 ={\r\n    src:'src/logo.jpg',\r\n    alt: 'logo',\r\n    style:'width:70px;'   \r\n};\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <div className = \"main-header\">\r\n            <div className = \"sub-header1\">\r\n                <div className = \"h-1\">\r\n                    <div>\r\n                        Tweet \r\n                    </div>\r\n                    <div>\r\n                        Together\r\n                    </div>\r\n                </div>\r\n                <div className = \"h-2\">\r\n            <img \r\n            src={logo1.src}\r\n            alt={logo1.alt}\r\n            style={logo1.width} />            \r\n            </div>\r\n                <div className = \"h-3\">Threaded Tweeter</div>\r\n            </div>\r\n            <div className = \"sub-header2\">\r\n                <div className = \"h-4\">    \r\n                    <Switch>\r\n                        <Route path=\"/loginredirect\" component={LoggedInDisplay} />\r\n                        <Route path=\"/\" component={LoginButton} />\r\n                    </Switch>\r\n                </div>\r\n            </div>       \r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport ReactModal, {Modal} from 'react-modal';\r\n\r\nReactModal.setAppElement('#main');\r\n\r\nclass OurModal extends React.Component {\r\n  constructor () {\r\n    super();\r\n    this.state = {\r\n      showModal: false\r\n    };\r\n    \r\n    this.handleOpenModal = this.handleOpenModal.bind(this);\r\n    this.handleCloseModal = this.handleCloseModal.bind(this);\r\n  }\r\n  \r\n  handleOpenModal () {\r\n    this.setState({ showModal: true });\r\n  }\r\n  \r\n  handleCloseModal () {\r\n    this.setState({ showModal: false });\r\n  }\r\n  \r\n  render () {\r\n    return (\r\n      <div>\r\n        <button type=\"button\" className=\"notbutton\" onClick={this.handleOpenModal}>Splitting options</button>\r\n        <ReactModal \r\n           isOpen={this.state.showModal} class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                        <div class=\"modal-title\" id=\"exampleModalLabel\">\r\n                            Tweet splitting allows us to formate your thread for you.\r\n                        </div>\r\n                        <button  onClick={this.handleCloseModal} type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                        ...\r\n                    </div>\r\n\r\n                    <div class=\"modal-footer\">\r\n\r\n                        <form>\r\n                            <div class=\"b-7\" data-dismiss=\"modal\"><input type=\"submit2\" value=\"cancel\"/></div>\r\n\r\n                            <div class=\"b-6\">\r\n                                <input type=\"submit2\" value=\"submit\"/>\r\n                            </div>\r\n                        </form> \r\n\r\n                    </div>\r\n        </ReactModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default OurModal;","import React, { Component } from 'react';\r\nimport OurModal from './OurModal';\r\n\r\nconst autosplitting = <div className=\"b-1\">\r\n                        Auto splitting: off\r\n                    </div>;\r\n\r\nconst sendtweet = <div className=\"b-3\">\r\n                        <input type=\"submit2\" value=\"submit\"/></div>;\r\n\r\nconst splittingoptions = <div className=\"b-2\">\r\n                        <OurModal />\r\n                    </div>;\r\n\r\nconst Tweets = ({boxes}) => (\r\n<div>\r\n    {\r\n        boxes.map( box =>(\r\n        <div key = {box.index}>\r\n    <textarea type=\"text2\" id=\"tweet\" name=\"tweet\">\r\n                    </textarea>\r\n                    <div className = \"sub-body2\">\r\n                        <div className=\"b-4\">\r\n                            Add picture\r\n                        </div>\r\n            {charactersused} \r\n                    </div>\r\n    </div>\r\n        ))\r\n    }\r\n    </div>\r\n)\r\n\r\nconst charactersused = <div className=\"b-5\">\r\n                            0/280 characters used\r\n                        </div>;\r\n\r\nclass Body extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.handleaddbox = this.handleaddbox.bind(this);\r\n        this.handleremovebox = this.handleremovebox.bind(this);\r\n        const boxnum = {index: 1};\r\n        const boxes = [];\r\n        boxes.push({boxnum});\r\n        this.state = {boxes};\r\n        \r\n        \r\n    }\r\n    handleaddbox(){\r\n        const newBoxes = this.state.boxes;\r\n        newBoxes.push({index: newBoxes.length});\r\n        this.setState({boxes : newBoxes});\r\n        console.log(\"handleaddbox \" + this.state.boxes.length);\r\n    }\r\n    handleremovebox(){\r\n        const newBoxes = this.state.boxes;\r\n        newBoxes.splice((newBoxes.length-1),1);\r\n        this.setState({boxes : newBoxes});\r\n        console.log(\"handleremovebox \" + this.state.boxes.length);\r\n    }\r\n    render() {\r\n        const boxes = this.state.boxes;\r\n        const boxnum = boxes.length;\r\n        let button;\r\n        if(boxnum === 1){\r\n            button = <div className = \"centeronebutton\">\r\n            <button className = \"circlebutton\" onClick = {this.handleaddbox}>\r\n                            +\r\n                        </button>\r\n            </div>\r\n        } else{\r\n            button = <div className = \"centeronebutton\">\r\n             <button className = \"circlebutton\" onClick = {this.handleremovebox}>\r\n                            -\r\n                        </button>\r\n            <button className = \"circlebutton\" onClick = {this.handleaddbox}>\r\n                            +\r\n                        </button>\r\n            </div>\r\n        }\r\n        return (\r\n            <div className = \"main-body\">\r\n            <div className = \"sub-body\">\r\n                <div className = \"sub-body1\">\r\n                    {autosplitting}\r\n                    {splittingoptions}\r\n                </div>\r\n<Tweets boxes={boxes}/>             \r\n            {button}\r\n                    {sendtweet}\r\n\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Body;","import React, { Component } from 'react';\r\n\r\nconst contactbutton = <form action=\"http://google.com\">\r\n    <input type=\"link\" value=\"contact us\"/>\r\n        </form>;\r\n\r\nconst helpbutton = <form action=\"http://google.com\">\r\n    <input type=\"link\" value=\"help\"/> \r\n        </form>;\r\n\r\nconst logo2 ={\r\n    src:'src/logo2.jpg',\r\n    alt: 'logo2',\r\n    style:'width:55px;'   \r\n};\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n\r\n            <div className = \"main-footer\">\r\n            <div className = \"h-1\">\r\n            {helpbutton}\r\n            </div>\r\n            <div className = \"h-2\">\r\n            <img \r\n            src={logo2.src}\r\n            alt={logo2.alt}\r\n            style={logo2.width} />\r\n            </div>\r\n            <div className = \"h-5\">  \r\n            {contactbutton}\r\n            </div>\r\n            </div> \r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport Header from './Header';\r\nimport Body from './Body';\r\nimport Footer from './Footer';\r\n\r\nclass Page extends Component {\r\n    render() {\r\n        return (\r\n            <div className = \"bodystyle\">\r\n            <Header />\r\n            <Body />\r\n            <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Page;","import React, { Component } from 'react';\r\nimport Page from './Page'\r\nimport './App.css';\r\nimport { BrowserRouter} from \"react-router-dom\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <Page />\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}